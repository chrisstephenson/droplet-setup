#!/bin/bash 
#
# apachevirtualhostconfig  sets up an apache virtual host using a template
#
# (c) Chris Stephenson 2014
# Licensed under GNU Public License v3 or later
# Contributed by Orkun AÅŸa 2015
#
# No warranty explicit or implied that this script is fit for purpose or even that it will not harm your computer 
#
# must run with root privileges
# parameters - domain.name  sftp.user.name IP number 
# example use: apachevirtualhostconfig myfirstdomain.com myfirstdomainsftpuser 111.23.11.97
#
#
# Note: silly parameter values may make this script fail 
# Avoiding that would require a sanity clause. 
# And everyone knows there is no sanity clause. 
#
# 
# Take the domain name and the username
domain="${domain:-$(echo $1)}"
user="${user:-$(echo $2)}"
ip="${ip:-$(echo $3)}"
# check domain name
if [ $domain = ]; then
echo "Please, enter the domain name"
read domain
fi
# Check username
if [ $user = ]; then
echo "Please, enter the username"
read user
fi
if [ $ip = ]; then
echo "Please, enter the ip address"
read ip
fi
# Create the domain directory
mkdir "/var/www/$domain"
# set up a user to own the directory for the domain, without command shell access
adduser --home /var/www/$domain --shell /bin/false --gecos ' ' $user
# add the user to the sftp group, so it will be locked in an sftp chroot jail
# note that we must have set up the sftp group and the sftp config first for this to work.
usermod  -G sftp $user
# remove unnecessary files from the home directory
rm /var/www/$domain/.bash_logout /var/www/$domain/.bashrc /var/www/$domain/.profile
# run the template file through sed to create the actual config file for this virtual host
cat /etc/apache2/sites-available/template | sed -e "s/_domain_/$domain/g" | sed -e "s/_ip_/$ip/g" > /etc/apache2/sites-available/www.$domain.conf
# set up the web root directory
if [ -d "/var/www/$domain/webroot" ]; then
    echo "webroot ok"
else
    echo "creating webroot"
    mkdir "/var/www/$domain/webroot"
fi
# make an empty robots.txt - cuts down the error messages in the log - can be filled in later
touch /var/www/$domain/webroot/robots.txt
# make a default index.html so we can test our new domain and see requests are going to the correct place
echo "<html><head></head><body><h1>Test index page for $domain </h1></body></html>" >  /var/www/$domain/webroot/index.html
# set up the correct file access permissions and ownership for the root and the document root for this
# virtual domain 
#
# set group ownership to apache user (www-data) so apache can read the files
#
chown -R $user:www-data /var/www/$domain/webroot 
#
# Only group and user can read the document root
#
chmod -R 750 /var/www/$domain/webroot 
#
# Root must own the directory above webroot (sftp jail requirement)
#
chown root:$user /var/www/$domain
chown root:www-data /var/www/$domain/*
chmod 755 /var/www/$domain
chmod 755 /var/www/$domain/webroot
chmod g+s /var/www/$domain/webroot
chmod 750 /var/www/$domain/webroot/*
#
# This section enables logging of sftp access by our sftp users
# This helps determine how and when our sftp users have broken things.
# Anyone who claims they really know what is happening in this set up doesn't fully
# understand the situation. I just tried and tried until it worked. 
#
mkdir /var/www/$domain/dev
chmod 755 /var/www/$domain/dev
chown root:root /var/www/$domain/dev
echo "\$AddUnixListenSocket /var/www/$domain/dev/log" >> /etc/rsyslog.d/60-sftp.conf
#
# Set the sticky bit to try to ensure that newly created files have the correct permissions
#
find /var/www/$domain/webroot -type d -exec chmod gu+sx '{}' \;

#
# Start up our virtual host
#
a2ensite www.$domain.conf
#
# restart Apache
#
service apache2 restart
